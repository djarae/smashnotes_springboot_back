# ============================================
# Nombre de la aplicación
# ============================================
spring.application.name=smashnotest_back

# ============================================
# Configuración de PostgreSQL (Neon)
# ============================================
spring.datasource.url=jdbc:postgresql://ep-nameless-mountain-a6a39ou0-pooler.us-west-2.aws.neon.tech:5432/dbsmash?sslmode=require&connectTimeout=20
spring.datasource.username=dbsmash_owner
spring.datasource.password=npg_BNqzCT5rV0Iu
spring.datasource.driver-class-name=org.postgresql.Driver

# ============================================
# Configuración de HikariCP (optimizado para Neon Free)
# ============================================
# Tamaño del pool reducido para no superar límite de Neon Free
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1

# Cierra conexiones inactivas después de 5 min (300000 ms)
spring.datasource.hikari.idle-timeout=300000

# Reinicia conexiones cada 10 min (600000 ms)
spring.datasource.hikari.max-lifetime=600000

# Tiempo máximo de espera al abrir conexión (20s)
spring.datasource.hikari.connection-timeout=20000

# Tiempo máximo para validar una conexión (5s)
spring.datasource.hikari.validation-timeout=5000

# Query usada para validar la conexión antes de entregarla
spring.datasource.hikari.connection-test-query=SELECT 1

# Evita que la app falle si Neon está dormido al iniciar
spring.datasource.hikari.initialization-fail-timeout=0

# ============================================
# Configuración de JPA / Hibernate
# ============================================
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# En desarrollo: update (crea/actualiza tablas automáticamente)
# En producción: cambiar a validate o none
spring.jpa.hibernate.ddl-auto=update

# Muestra SQL en consola
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Desactiva Open Session in View (buena práctica)
spring.jpa.open-in-view=false

# ============================================
# KeepAlive / Mantener conexión viva
# ============================================
# Recomiendo crear un @Scheduled en código para ejecutar SELECT 1 cada 3-4 minutos
# Esto mantiene la conexión viva y evita fallos en la primera request después de sleep
